{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{getApiUrl}from'../config/api';import{Fragment as _Fragment,jsx as _jsx}from\"react/jsx-runtime\";const BackgroundProvider=_ref=>{let{children}=_ref;const[settings,setSettings]=useState(null);const updateBackground=data=>{console.log('Обновление фона с данными:',data);if(data.siteBackground==='image'&&data.siteBackgroundImage){const imageUrl=data.siteBackgroundImage.startsWith('http')?data.siteBackgroundImage:`http://localhost:5000${data.siteBackgroundImage}`;console.log('Применяем фоновое изображение:',imageUrl);document.body.style.backgroundImage=`url(${imageUrl})`;document.body.style.backgroundSize='cover';document.body.style.backgroundPosition='center';document.body.style.backgroundAttachment='fixed';document.body.style.backgroundRepeat='no-repeat';document.body.style.backgroundColor='#f5f5f5';}else{console.log('Применяем цветовой фон:',data.siteBackgroundColor);document.body.style.backgroundImage='none';document.body.style.backgroundColor=data.siteBackgroundColor||'#f5f5f5';}console.log('Применены настройки фона:',{type:data.siteBackground,image:data.siteBackgroundImage,color:data.siteBackgroundColor});};useEffect(()=>{const fetchSettings=async()=>{try{const response=await axios.get(getApiUrl('/api/site-settings'));setSettings(response.data);updateBackground(response.data);}catch(error){console.error('Ошибка при загрузке настроек фона:',error);document.body.style.backgroundImage='none';document.body.style.backgroundColor='#f5f5f5';}};const handleSettingsUpdate=()=>{console.log('Получено событие обновления настроек');fetchSettings();};// Подписываемся на событие обновления настроек\nwindow.addEventListener('settingsUpdated',handleSettingsUpdate);fetchSettings();return()=>{document.body.style.backgroundImage='none';document.body.style.backgroundColor='#f5f5f5';window.removeEventListener('settingsUpdated',handleSettingsUpdate);};},[]);return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default BackgroundProvider;","map":{"version":3,"names":["React","useEffect","useState","axios","getApiUrl","Fragment","_Fragment","jsx","_jsx","BackgroundProvider","_ref","children","settings","setSettings","updateBackground","data","console","log","siteBackground","siteBackgroundImage","imageUrl","startsWith","document","body","style","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","backgroundRepeat","backgroundColor","siteBackgroundColor","type","image","color","fetchSettings","response","get","error","handleSettingsUpdate","window","addEventListener","removeEventListener"],"sources":["/home/renat/Project_1/frontend/src/components/BackgroundProvider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getApiUrl } from '../config/api';\n\nconst BackgroundProvider = ({ children }) => {\n    const [settings, setSettings] = useState(null);\n\n    const updateBackground = (data) => {\n        console.log('Обновление фона с данными:', data);\n        \n        if (data.siteBackground === 'image' && data.siteBackgroundImage) {\n            const imageUrl = data.siteBackgroundImage.startsWith('http') \n                ? data.siteBackgroundImage \n                : `http://localhost:5000${data.siteBackgroundImage}`;\n                \n            console.log('Применяем фоновое изображение:', imageUrl);\n            \n            document.body.style.backgroundImage = `url(${imageUrl})`;\n            document.body.style.backgroundSize = 'cover';\n            document.body.style.backgroundPosition = 'center';\n            document.body.style.backgroundAttachment = 'fixed';\n            document.body.style.backgroundRepeat = 'no-repeat';\n            document.body.style.backgroundColor = '#f5f5f5';\n        } else {\n            console.log('Применяем цветовой фон:', data.siteBackgroundColor);\n            document.body.style.backgroundImage = 'none';\n            document.body.style.backgroundColor = data.siteBackgroundColor || '#f5f5f5';\n        }\n\n        console.log('Применены настройки фона:', {\n            type: data.siteBackground,\n            image: data.siteBackgroundImage,\n            color: data.siteBackgroundColor\n        });\n    };\n\n    useEffect(() => {\n        const fetchSettings = async () => {\n            try {\n                const response = await axios.get(getApiUrl('/api/site-settings'));\n                setSettings(response.data);\n                updateBackground(response.data);\n            } catch (error) {\n                console.error('Ошибка при загрузке настроек фона:', error);\n                document.body.style.backgroundImage = 'none';\n                document.body.style.backgroundColor = '#f5f5f5';\n            }\n        };\n\n        const handleSettingsUpdate = () => {\n            console.log('Получено событие обновления настроек');\n            fetchSettings();\n        };\n\n        // Подписываемся на событие обновления настроек\n        window.addEventListener('settingsUpdated', handleSettingsUpdate);\n\n        fetchSettings();\n\n        return () => {\n            document.body.style.backgroundImage = 'none';\n            document.body.style.backgroundColor = '#f5f5f5';\n            window.removeEventListener('settingsUpdated', handleSettingsUpdate);\n        };\n    }, []);\n\n    return <>{children}</>;\n};\n\nexport default BackgroundProvider; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}