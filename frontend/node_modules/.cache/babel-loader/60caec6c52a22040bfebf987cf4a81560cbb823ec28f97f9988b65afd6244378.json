{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Sait-znakomstv2\\\\frontend\\\\src\\\\components\\\\CitySelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './CitySelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySelector = ({\n  onCitySelect,\n  onClose\n}) => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/cities');\n        // Фильтруем только активные города\n        const activeCities = response.data.filter(city => city.isActive);\n        setCities(activeCities);\n        setLoading(false);\n      } catch (error) {\n        console.error('Ошибка при загрузке городов:', error);\n        setError('Не удалось загрузить список городов');\n        setLoading(false);\n      }\n    };\n    fetchCities();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (selectedCity) {\n      // Сохраняем выбранный город в localStorage\n      localStorage.setItem('selectedCity', selectedCity);\n      onCitySelect(selectedCity);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-selector-loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-selector-error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-selector-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-selector-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0414\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0430\\u043D\\u043A\\u0435\\u0442, \\u043F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0443\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCity,\n          onChange: e => setSelectedCity(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: city.id,\n            children: city.name\n          }, city.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-selector-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !selectedCity,\n            children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"cancel-button\",\n            children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(CitySelector, \"xv06Y+vhATqpuyGdKGDq1gLmjIA=\");\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CitySelector","onCitySelect","onClose","_s","cities","setCities","loading","setLoading","error","setError","selectedCity","setSelectedCity","fetchCities","response","get","activeCities","data","filter","city","isActive","console","handleSubmit","e","preventDefault","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","map","id","name","type","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Sait-znakomstv2/frontend/src/components/CitySelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './CitySelector.css';\r\n\r\nconst CitySelector = ({ onCitySelect, onClose }) => {\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [selectedCity, setSelectedCity] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchCities = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/cities');\r\n                // Фильтруем только активные города\r\n                const activeCities = response.data.filter(city => city.isActive);\r\n                setCities(activeCities);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке городов:', error);\r\n                setError('Не удалось загрузить список городов');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchCities();\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (selectedCity) {\r\n            // Сохраняем выбранный город в localStorage\r\n            localStorage.setItem('selectedCity', selectedCity);\r\n            onCitySelect(selectedCity);\r\n        }\r\n    };\r\n\r\n    if (loading) return <div className=\"city-selector-loading\">Загрузка списка городов...</div>;\r\n    if (error) return <div className=\"city-selector-error\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"city-selector-overlay\">\r\n            <div className=\"city-selector-modal\">\r\n                <h2>Выберите ваш город</h2>\r\n                <p>Для просмотра анкет, пожалуйста, укажите ваш город</p>\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                    <select\r\n                        value={selectedCity}\r\n                        onChange={(e) => setSelectedCity(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Выберите город</option>\r\n                        {cities.map(city => (\r\n                            <option key={city.id} value={city.id}>\r\n                                {city.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <div className=\"city-selector-buttons\">\r\n                        <button type=\"submit\" disabled={!selectedCity}>\r\n                            Подтвердить\r\n                        </button>\r\n                        <button type=\"button\" onClick={onClose} className=\"cancel-button\">\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CitySelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}