{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./AdminCitiesPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminCitiesPage=()=>{const[cities,setCities]=useState([]);const[profiles,setProfiles]=useState([]);const[newCityName,setNewCityName]=useState('');const[selectedCity,setSelectedCity]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');// Загрузка городов и анкет\nuseEffect(()=>{const fetchData=async()=>{try{const[citiesResponse,profilesResponse]=await Promise.all([axios.get('http://localhost:5000/api/cities',{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}}),axios.get('http://localhost:5000/api/profiles',{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}})]);setCities(citiesResponse.data);setProfiles(profilesResponse.data);setLoading(false);}catch(error){console.error('Ошибка при загрузке данных:',error);setError('Ошибка при загрузке данных');setLoading(false);}};fetchData();},[]);// Создание нового города\nconst handleCreateCity=async e=>{e.preventDefault();try{const response=await axios.post('http://localhost:5000/api/cities',{name:newCityName},{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});setCities([...cities,response.data]);setNewCityName('');}catch(error){console.error('Ошибка при создании города:',error);setError('Ошибка при создании города');}};// Обновление статуса города\nconst handleUpdateStatus=async(cityId,isActive)=>{try{const response=await axios.patch(`http://localhost:5000/api/cities/${cityId}/status`,{isActive},{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});setCities(cities.map(city=>city.id===cityId?response.data:city));}catch(error){console.error('Ошибка при обновлении статуса:',error);setError('Ошибка при обновлении статуса');}};// Удаление города\nconst handleDeleteCity=async cityId=>{if(window.confirm('Вы уверены, что хотите удалить этот город?')){try{await axios.delete(`http://localhost:5000/api/cities/${cityId}`,{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});setCities(cities.filter(city=>city.id!==cityId));}catch(error){console.error('Ошибка при удалении города:',error);setError('Ошибка при удалении города');}}};// Привязка анкет к городу\nconst handleAssignProfiles=async(cityId,selectedProfileIds)=>{try{const response=await axios.post(`http://localhost:5000/api/cities/${cityId}/profiles`,{profileIds:selectedProfileIds},{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});setCities(cities.map(city=>city.id===cityId?response.data:city));setSelectedCity(null);}catch(error){console.error('Ошибка при привязке анкет:',error);setError('Ошибка при привязке анкет');}};if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"});if(error)return/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error});return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-cities-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430\\u043C\\u0438\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"create-city-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0433\\u043E\\u0440\\u043E\\u0434\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCreateCity,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newCityName,onChange:e=>setNewCityName(e.target.value),placeholder:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0433\\u043E\\u0440\\u043E\\u0434\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cities-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\u0413\\u043E\\u0440\\u043E\\u0434\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0430\\u043D\\u043A\\u0435\\u0442\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:cities.map(city=>{var _city$Profiles;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:city.name}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{value:city.isActive?'active':'inactive',onChange:e=>handleUpdateStatus(city.id,e.target.value==='active'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"active\",children:\"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D\"}),/*#__PURE__*/_jsx(\"option\",{value:\"inactive\",children:\"\\u041D\\u0435\\u0430\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D\"})]})}),/*#__PURE__*/_jsx(\"td\",{children:((_city$Profiles=city.Profiles)===null||_city$Profiles===void 0?void 0:_city$Profiles.length)||0}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedCity(city),children:\"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0430\\u043D\\u043A\\u0435\\u0442\\u0430\\u043C\\u0438\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteCity(city.id),className:\"delete-button\",children:\"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"})]})]},city.id);})})]})]}),selectedCity&&/*#__PURE__*/_jsx(\"div\",{className:\"profiles-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\u0410\\u043D\\u043A\\u0435\\u0442\\u044B \\u0434\\u043B\\u044F \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430 \",selectedCity.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"profiles-list\",children:profiles.map(profile=>{var _selectedCity$Profile;const isAssigned=(_selectedCity$Profile=selectedCity.Profiles)===null||_selectedCity$Profile===void 0?void 0:_selectedCity$Profile.some(p=>p.id===profile.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isAssigned,onChange:e=>{const newProfiles=e.target.checked?[...(selectedCity.Profiles||[]),profile]:(selectedCity.Profiles||[]).filter(p=>p.id!==profile.id);handleAssignProfiles(selectedCity.id,newProfiles.map(p=>p.id));}}),/*#__PURE__*/_jsxs(\"span\",{children:[profile.name,\" (\",profile.age,\", \",profile.gender,\")\"]})]},profile.id);})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedCity(null),children:\"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"})]})})]});};export default AdminCitiesPage;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","AdminCitiesPage","cities","setCities","profiles","setProfiles","newCityName","setNewCityName","selectedCity","setSelectedCity","loading","setLoading","error","setError","fetchData","citiesResponse","profilesResponse","Promise","all","get","headers","localStorage","getItem","data","console","handleCreateCity","e","preventDefault","response","post","name","handleUpdateStatus","cityId","isActive","patch","map","city","id","handleDeleteCity","window","confirm","delete","filter","handleAssignProfiles","selectedProfileIds","profileIds","className","children","onSubmit","type","value","onChange","target","placeholder","required","_city$Profiles","Profiles","length","onClick","profile","_selectedCity$Profile","isAssigned","some","p","checked","newProfiles","age","gender"],"sources":["/home/renat/Project_1/frontend/src/pages/AdminCitiesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AdminCitiesPage.css';\n\nconst AdminCitiesPage = () => {\n    const [cities, setCities] = useState([]);\n    const [profiles, setProfiles] = useState([]);\n    const [newCityName, setNewCityName] = useState('');\n    const [selectedCity, setSelectedCity] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    // Загрузка городов и анкет\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const [citiesResponse, profilesResponse] = await Promise.all([\n                    axios.get('http://localhost:5000/api/cities', {\n                        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n                    }),\n                    axios.get('http://localhost:5000/api/profiles', {\n                        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n                    })\n                ]);\n\n                setCities(citiesResponse.data);\n                setProfiles(profilesResponse.data);\n                setLoading(false);\n            } catch (error) {\n                console.error('Ошибка при загрузке данных:', error);\n                setError('Ошибка при загрузке данных');\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    // Создание нового города\n    const handleCreateCity = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(\n                'http://localhost:5000/api/cities',\n                { name: newCityName },\n                {\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n                }\n            );\n            setCities([...cities, response.data]);\n            setNewCityName('');\n        } catch (error) {\n            console.error('Ошибка при создании города:', error);\n            setError('Ошибка при создании города');\n        }\n    };\n\n    // Обновление статуса города\n    const handleUpdateStatus = async (cityId, isActive) => {\n        try {\n            const response = await axios.patch(\n                `http://localhost:5000/api/cities/${cityId}/status`,\n                { isActive },\n                {\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n                }\n            );\n            setCities(cities.map(city => \n                city.id === cityId ? response.data : city\n            ));\n        } catch (error) {\n            console.error('Ошибка при обновлении статуса:', error);\n            setError('Ошибка при обновлении статуса');\n        }\n    };\n\n    // Удаление города\n    const handleDeleteCity = async (cityId) => {\n        if (window.confirm('Вы уверены, что хотите удалить этот город?')) {\n            try {\n                await axios.delete(\n                    `http://localhost:5000/api/cities/${cityId}`,\n                    {\n                        headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n                    }\n                );\n                setCities(cities.filter(city => city.id !== cityId));\n            } catch (error) {\n                console.error('Ошибка при удалении города:', error);\n                setError('Ошибка при удалении города');\n            }\n        }\n    };\n\n    // Привязка анкет к городу\n    const handleAssignProfiles = async (cityId, selectedProfileIds) => {\n        try {\n            const response = await axios.post(\n                `http://localhost:5000/api/cities/${cityId}/profiles`,\n                { profileIds: selectedProfileIds },\n                {\n                    headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }\n                }\n            );\n            setCities(cities.map(city => \n                city.id === cityId ? response.data : city\n            ));\n            setSelectedCity(null);\n        } catch (error) {\n            console.error('Ошибка при привязке анкет:', error);\n            setError('Ошибка при привязке анкет');\n        }\n    };\n\n    if (loading) return <div className=\"loading\">Загрузка...</div>;\n    if (error) return <div className=\"error-message\">{error}</div>;\n\n    return (\n        <div className=\"admin-cities-page\">\n            <h1>Управление городами</h1>\n\n            {/* Форма создания города */}\n            <div className=\"create-city-form\">\n                <h2>Добавить новый город</h2>\n                <form onSubmit={handleCreateCity}>\n                    <input\n                        type=\"text\"\n                        value={newCityName}\n                        onChange={(e) => setNewCityName(e.target.value)}\n                        placeholder=\"Название города\"\n                        required\n                    />\n                    <button type=\"submit\">Добавить город</button>\n                </form>\n            </div>\n\n            {/* Список городов */}\n            <div className=\"cities-list\">\n                <h2>Список городов</h2>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Город</th>\n                            <th>Статус</th>\n                            <th>Количество анкет</th>\n                            <th>Действия</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {cities.map(city => (\n                            <tr key={city.id}>\n                                <td>{city.name}</td>\n                                <td>\n                                    <select\n                                        value={city.isActive ? 'active' : 'inactive'}\n                                        onChange={(e) => handleUpdateStatus(city.id, e.target.value === 'active')}\n                                    >\n                                        <option value=\"active\">Активен</option>\n                                        <option value=\"inactive\">Неактивен</option>\n                                    </select>\n                                </td>\n                                <td>{city.Profiles?.length || 0}</td>\n                                <td>\n                                    <button onClick={() => setSelectedCity(city)}>\n                                        Управление анкетами\n                                    </button>\n                                    <button \n                                        onClick={() => handleDeleteCity(city.id)}\n                                        className=\"delete-button\"\n                                    >\n                                        Удалить\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n\n            {/* Модальное окно управления анкетами */}\n            {selectedCity && (\n                <div className=\"profiles-modal\">\n                    <div className=\"modal-content\">\n                        <h2>Анкеты для города {selectedCity.name}</h2>\n                        <div className=\"profiles-list\">\n                            {profiles.map(profile => {\n                                const isAssigned = selectedCity.Profiles?.some(\n                                    p => p.id === profile.id\n                                );\n                                return (\n                                    <div key={profile.id} className=\"profile-item\">\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={isAssigned}\n                                            onChange={(e) => {\n                                                const newProfiles = e.target.checked\n                                                    ? [...(selectedCity.Profiles || []), profile]\n                                                    : (selectedCity.Profiles || []).filter(p => p.id !== profile.id);\n                                                handleAssignProfiles(\n                                                    selectedCity.id,\n                                                    newProfiles.map(p => p.id)\n                                                );\n                                            }}\n                                        />\n                                        <span>\n                                            {profile.name} ({profile.age}, {profile.gender})\n                                        </span>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                        <button onClick={() => setSelectedCity(null)}>Закрыть</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default AdminCitiesPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}