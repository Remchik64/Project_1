{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\sait-znakomstv\\\\frontend\\\\src\\\\components\\\\LogViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport logger from '../utils/logger';\nimport './LogViewer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogViewer = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [filter, setFilter] = useState('ALL');\n  useEffect(() => {\n    const updateLogs = () => {\n      setLogs(logger.getLogs());\n    };\n\n    // Обновляем логи каждую секунду\n    const interval = setInterval(updateLogs, 1000);\n    updateLogs();\n    return () => clearInterval(interval);\n  }, []);\n  const filteredLogs = filter === 'ALL' ? logs : logs.filter(log => log.type === filter);\n  const handleClearLogs = () => {\n    logger.clearLogs();\n    setLogs([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-viewer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        className: \"log-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALL\",\n          children: \"\\u0412\\u0441\\u0435 \\u043B\\u043E\\u0433\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ERROR\",\n          children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"WARN\",\n          children: \"\\u041F\\u0440\\u0435\\u0434\\u0443\\u043F\\u0440\\u0435\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"INFO\",\n          children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DEBUG\",\n          children: \"\\u041E\\u0442\\u043B\\u0430\\u0434\\u043A\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearLogs,\n        className: \"clear-logs-button\",\n        children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u043B\\u043E\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-container\",\n      children: filteredLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `log-entry log-${log.type.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"log-timestamp\",\n            children: new Date(log.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `log-type log-type-${log.type.toLowerCase()}`,\n            children: log.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log-message\",\n          children: log.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), log.data && /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"log-data\",\n          children: JSON.stringify(log.data, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LogViewer, \"oFJa7C2vpHjSBBpSw+SlH5nKfgQ=\");\n_c = LogViewer;\nexport default LogViewer;\nvar _c;\n$RefreshReg$(_c, \"LogViewer\");","map":{"version":3,"names":["React","useState","useEffect","logger","jsxDEV","_jsxDEV","LogViewer","_s","logs","setLogs","filter","setFilter","updateLogs","getLogs","interval","setInterval","clearInterval","filteredLogs","log","type","handleClearLogs","clearLogs","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","toLowerCase","Date","timestamp","toLocaleString","message","data","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/sait-znakomstv/frontend/src/components/LogViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport logger from '../utils/logger';\r\nimport './LogViewer.css';\r\n\r\nconst LogViewer = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [filter, setFilter] = useState('ALL');\r\n\r\n  useEffect(() => {\r\n    const updateLogs = () => {\r\n      setLogs(logger.getLogs());\r\n    };\r\n\r\n    // Обновляем логи каждую секунду\r\n    const interval = setInterval(updateLogs, 1000);\r\n    updateLogs();\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const filteredLogs = filter === 'ALL' \r\n    ? logs \r\n    : logs.filter(log => log.type === filter);\r\n\r\n  const handleClearLogs = () => {\r\n    logger.clearLogs();\r\n    setLogs([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"log-viewer\">\r\n      <div className=\"log-controls\">\r\n        <select \r\n          value={filter} \r\n          onChange={(e) => setFilter(e.target.value)}\r\n          className=\"log-filter\"\r\n        >\r\n          <option value=\"ALL\">Все логи</option>\r\n          <option value=\"ERROR\">Ошибки</option>\r\n          <option value=\"WARN\">Предупреждения</option>\r\n          <option value=\"INFO\">Информация</option>\r\n          <option value=\"DEBUG\">Отладка</option>\r\n        </select>\r\n        <button onClick={handleClearLogs} className=\"clear-logs-button\">\r\n          Очистить логи\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"logs-container\">\r\n        {filteredLogs.map((log, index) => (\r\n          <div \r\n            key={index} \r\n            className={`log-entry log-${log.type.toLowerCase()}`}\r\n          >\r\n            <div className=\"log-header\">\r\n              <span className=\"log-timestamp\">{new Date(log.timestamp).toLocaleString()}</span>\r\n              <span className={`log-type log-type-${log.type.toLowerCase()}`}>\r\n                {log.type}\r\n              </span>\r\n            </div>\r\n            <div className=\"log-message\">{log.message}</div>\r\n            {log.data && (\r\n              <pre className=\"log-data\">\r\n                {JSON.stringify(log.data, null, 2)}\r\n              </pre>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}