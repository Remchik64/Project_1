{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getApiUrl, getMediaUrl } from '../config/api';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundProvider = ({\n  children\n}) => {\n  _s();\n  const [settings, setSettings] = useState(null);\n  const updateBackground = data => {\n    // Сначала сбрасываем все стили\n    document.documentElement.style.height = '100%';\n    document.body.style.minHeight = '100vh';\n    document.body.style.margin = '0';\n    document.body.style.padding = '0';\n    document.body.style.display = 'flex';\n    document.body.style.flexDirection = 'column';\n\n    // Применяем фон в зависимости от настроек\n    if (data.siteBackground === 'image' && data.siteBackgroundImage) {\n      const imageUrl = getMediaUrl(data.siteBackgroundImage);\n\n      // Стили для фонового изображения\n      document.body.style.backgroundImage = `url(${imageUrl})`;\n      document.body.style.backgroundSize = '100% auto';\n      document.body.style.backgroundPosition = 'center top';\n      document.body.style.backgroundAttachment = 'fixed';\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundColor = '#f5f5f5'; // Фоновый цвет под изображением\n\n      // Добавляем оверлей для лучшей читаемости контента\n      document.body.style.position = 'relative';\n      document.body.style.zIndex = '0';\n\n      // Создаем или обновляем оверлей\n      let overlay = document.getElementById('background-overlay');\n      if (!overlay) {\n        overlay = document.createElement('div');\n        overlay.id = 'background-overlay';\n        document.body.appendChild(overlay);\n      }\n      overlay.style.position = 'fixed';\n      overlay.style.top = '0';\n      overlay.style.left = '0';\n      overlay.style.right = '0';\n      overlay.style.bottom = '0';\n      overlay.style.backgroundColor = 'rgba(255, 255, 255, 0.3)';\n      overlay.style.zIndex = '-1';\n    } else {\n      // Применяем цветовой фон\n      document.body.style.backgroundImage = 'none';\n      document.body.style.backgroundColor = data.siteBackgroundColor || '#f5f5f5';\n\n      // Удаляем оверлей, если он существует\n      const overlay = document.getElementById('background-overlay');\n      if (overlay) {\n        overlay.remove();\n      }\n    }\n  };\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await axios.get(getApiUrl('/api/site-settings'));\n        setSettings(response.data);\n        updateBackground(response.data);\n      } catch (error) {\n        console.error('Ошибка при загрузке настроек фона:', error);\n        // Применяем стили по умолчанию\n        document.documentElement.style.height = '100%';\n        document.body.style.minHeight = '100vh';\n        document.body.style.margin = '0';\n        document.body.style.padding = '0';\n        document.body.style.backgroundImage = 'none';\n        document.body.style.backgroundColor = '#f5f5f5';\n      }\n    };\n    const handleSettingsUpdate = () => {\n      fetchSettings();\n    };\n\n    // Инициализация\n    fetchSettings();\n    window.addEventListener('settingsUpdated', handleSettingsUpdate);\n\n    // Очистка при размонтировании\n    return () => {\n      window.removeEventListener('settingsUpdated', handleSettingsUpdate);\n      const overlay = document.getElementById('background-overlay');\n      if (overlay) {\n        overlay.remove();\n      }\n      // Сброс всех стилей\n      document.documentElement.style.height = '';\n      document.body.style.minHeight = '';\n      document.body.style.margin = '';\n      document.body.style.padding = '';\n      document.body.style.backgroundImage = 'none';\n      document.body.style.backgroundColor = '#f5f5f5';\n      document.body.style.position = '';\n      document.body.style.zIndex = '';\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(BackgroundProvider, \"mCc1AI3nlnFR6PXJot/5Z7AXrOM=\");\n_c = BackgroundProvider;\nexport default BackgroundProvider;\nvar _c;\n$RefreshReg$(_c, \"BackgroundProvider\");","map":{"version":3,"names":["React","useEffect","useState","axios","getApiUrl","getMediaUrl","Fragment","_Fragment","jsxDEV","_jsxDEV","BackgroundProvider","children","_s","settings","setSettings","updateBackground","data","document","documentElement","style","height","body","minHeight","margin","padding","display","flexDirection","siteBackground","siteBackgroundImage","imageUrl","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","backgroundRepeat","backgroundColor","position","zIndex","overlay","getElementById","createElement","id","appendChild","top","left","right","bottom","siteBackgroundColor","remove","fetchSettings","response","get","error","console","handleSettingsUpdate","window","addEventListener","removeEventListener","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Sait-znakomstv2/frontend/src/components/BackgroundProvider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { getApiUrl, getMediaUrl } from '../config/api';\r\n\r\nconst BackgroundProvider = ({ children }) => {\r\n    const [settings, setSettings] = useState(null);\r\n\r\n    const updateBackground = (data) => {\r\n        // Сначала сбрасываем все стили\r\n        document.documentElement.style.height = '100%';\r\n        document.body.style.minHeight = '100vh';\r\n        document.body.style.margin = '0';\r\n        document.body.style.padding = '0';\r\n        document.body.style.display = 'flex';\r\n        document.body.style.flexDirection = 'column';\r\n        \r\n        // Применяем фон в зависимости от настроек\r\n        if (data.siteBackground === 'image' && data.siteBackgroundImage) {\r\n            const imageUrl = getMediaUrl(data.siteBackgroundImage);\r\n            \r\n            // Стили для фонового изображения\r\n            document.body.style.backgroundImage = `url(${imageUrl})`;\r\n            document.body.style.backgroundSize = '100% auto';\r\n            document.body.style.backgroundPosition = 'center top';\r\n            document.body.style.backgroundAttachment = 'fixed';\r\n            document.body.style.backgroundRepeat = 'no-repeat';\r\n            document.body.style.backgroundColor = '#f5f5f5'; // Фоновый цвет под изображением\r\n            \r\n            // Добавляем оверлей для лучшей читаемости контента\r\n            document.body.style.position = 'relative';\r\n            document.body.style.zIndex = '0';\r\n            \r\n            // Создаем или обновляем оверлей\r\n            let overlay = document.getElementById('background-overlay');\r\n            if (!overlay) {\r\n                overlay = document.createElement('div');\r\n                overlay.id = 'background-overlay';\r\n                document.body.appendChild(overlay);\r\n            }\r\n            \r\n            overlay.style.position = 'fixed';\r\n            overlay.style.top = '0';\r\n            overlay.style.left = '0';\r\n            overlay.style.right = '0';\r\n            overlay.style.bottom = '0';\r\n            overlay.style.backgroundColor = 'rgba(255, 255, 255, 0.3)';\r\n            overlay.style.zIndex = '-1';\r\n            \r\n        } else {\r\n            // Применяем цветовой фон\r\n            document.body.style.backgroundImage = 'none';\r\n            document.body.style.backgroundColor = data.siteBackgroundColor || '#f5f5f5';\r\n            \r\n            // Удаляем оверлей, если он существует\r\n            const overlay = document.getElementById('background-overlay');\r\n            if (overlay) {\r\n                overlay.remove();\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchSettings = async () => {\r\n            try {\r\n                const response = await axios.get(getApiUrl('/api/site-settings'));\r\n                setSettings(response.data);\r\n                updateBackground(response.data);\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке настроек фона:', error);\r\n                // Применяем стили по умолчанию\r\n                document.documentElement.style.height = '100%';\r\n                document.body.style.minHeight = '100vh';\r\n                document.body.style.margin = '0';\r\n                document.body.style.padding = '0';\r\n                document.body.style.backgroundImage = 'none';\r\n                document.body.style.backgroundColor = '#f5f5f5';\r\n            }\r\n        };\r\n\r\n        const handleSettingsUpdate = () => {\r\n            fetchSettings();\r\n        };\r\n\r\n        // Инициализация\r\n        fetchSettings();\r\n        window.addEventListener('settingsUpdated', handleSettingsUpdate);\r\n\r\n        // Очистка при размонтировании\r\n        return () => {\r\n            window.removeEventListener('settingsUpdated', handleSettingsUpdate);\r\n            const overlay = document.getElementById('background-overlay');\r\n            if (overlay) {\r\n                overlay.remove();\r\n            }\r\n            // Сброс всех стилей\r\n            document.documentElement.style.height = '';\r\n            document.body.style.minHeight = '';\r\n            document.body.style.margin = '';\r\n            document.body.style.padding = '';\r\n            document.body.style.backgroundImage = 'none';\r\n            document.body.style.backgroundColor = '#f5f5f5';\r\n            document.body.style.position = '';\r\n            document.body.style.zIndex = '';\r\n        };\r\n    }, []);\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\nexport default BackgroundProvider; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMa,gBAAgB,GAAIC,IAAI,IAAK;IAC/B;IACAC,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;IAC9CH,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACG,SAAS,GAAG,OAAO;IACvCL,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACI,MAAM,GAAG,GAAG;IAChCN,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACK,OAAO,GAAG,GAAG;IACjCP,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACM,OAAO,GAAG,MAAM;IACpCR,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACO,aAAa,GAAG,QAAQ;;IAE5C;IACA,IAAIV,IAAI,CAACW,cAAc,KAAK,OAAO,IAAIX,IAAI,CAACY,mBAAmB,EAAE;MAC7D,MAAMC,QAAQ,GAAGxB,WAAW,CAACW,IAAI,CAACY,mBAAmB,CAAC;;MAEtD;MACAX,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACW,eAAe,GAAG,OAAOD,QAAQ,GAAG;MACxDZ,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACY,cAAc,GAAG,WAAW;MAChDd,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACa,kBAAkB,GAAG,YAAY;MACrDf,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACc,oBAAoB,GAAG,OAAO;MAClDhB,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACe,gBAAgB,GAAG,WAAW;MAClDjB,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACgB,eAAe,GAAG,SAAS,CAAC,CAAC;;MAEjD;MACAlB,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACiB,QAAQ,GAAG,UAAU;MACzCnB,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACkB,MAAM,GAAG,GAAG;;MAEhC;MACA,IAAIC,OAAO,GAAGrB,QAAQ,CAACsB,cAAc,CAAC,oBAAoB,CAAC;MAC3D,IAAI,CAACD,OAAO,EAAE;QACVA,OAAO,GAAGrB,QAAQ,CAACuB,aAAa,CAAC,KAAK,CAAC;QACvCF,OAAO,CAACG,EAAE,GAAG,oBAAoB;QACjCxB,QAAQ,CAACI,IAAI,CAACqB,WAAW,CAACJ,OAAO,CAAC;MACtC;MAEAA,OAAO,CAACnB,KAAK,CAACiB,QAAQ,GAAG,OAAO;MAChCE,OAAO,CAACnB,KAAK,CAACwB,GAAG,GAAG,GAAG;MACvBL,OAAO,CAACnB,KAAK,CAACyB,IAAI,GAAG,GAAG;MACxBN,OAAO,CAACnB,KAAK,CAAC0B,KAAK,GAAG,GAAG;MACzBP,OAAO,CAACnB,KAAK,CAAC2B,MAAM,GAAG,GAAG;MAC1BR,OAAO,CAACnB,KAAK,CAACgB,eAAe,GAAG,0BAA0B;MAC1DG,OAAO,CAACnB,KAAK,CAACkB,MAAM,GAAG,IAAI;IAE/B,CAAC,MAAM;MACH;MACApB,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACW,eAAe,GAAG,MAAM;MAC5Cb,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACgB,eAAe,GAAGnB,IAAI,CAAC+B,mBAAmB,IAAI,SAAS;;MAE3E;MACA,MAAMT,OAAO,GAAGrB,QAAQ,CAACsB,cAAc,CAAC,oBAAoB,CAAC;MAC7D,IAAID,OAAO,EAAE;QACTA,OAAO,CAACU,MAAM,CAAC,CAAC;MACpB;IACJ;EACJ,CAAC;EAED/C,SAAS,CAAC,MAAM;IACZ,MAAMgD,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM/C,KAAK,CAACgD,GAAG,CAAC/C,SAAS,CAAC,oBAAoB,CAAC,CAAC;QACjEU,WAAW,CAACoC,QAAQ,CAAClC,IAAI,CAAC;QAC1BD,gBAAgB,CAACmC,QAAQ,CAAClC,IAAI,CAAC;MACnC,CAAC,CAAC,OAAOoC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;QAC1D;QACAnC,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;QAC9CH,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACG,SAAS,GAAG,OAAO;QACvCL,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACI,MAAM,GAAG,GAAG;QAChCN,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACK,OAAO,GAAG,GAAG;QACjCP,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACW,eAAe,GAAG,MAAM;QAC5Cb,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACgB,eAAe,GAAG,SAAS;MACnD;IACJ,CAAC;IAED,MAAMmB,oBAAoB,GAAGA,CAAA,KAAM;MAC/BL,aAAa,CAAC,CAAC;IACnB,CAAC;;IAED;IACAA,aAAa,CAAC,CAAC;IACfM,MAAM,CAACC,gBAAgB,CAAC,iBAAiB,EAAEF,oBAAoB,CAAC;;IAEhE;IACA,OAAO,MAAM;MACTC,MAAM,CAACE,mBAAmB,CAAC,iBAAiB,EAAEH,oBAAoB,CAAC;MACnE,MAAMhB,OAAO,GAAGrB,QAAQ,CAACsB,cAAc,CAAC,oBAAoB,CAAC;MAC7D,IAAID,OAAO,EAAE;QACTA,OAAO,CAACU,MAAM,CAAC,CAAC;MACpB;MACA;MACA/B,QAAQ,CAACC,eAAe,CAACC,KAAK,CAACC,MAAM,GAAG,EAAE;MAC1CH,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACG,SAAS,GAAG,EAAE;MAClCL,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACI,MAAM,GAAG,EAAE;MAC/BN,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACK,OAAO,GAAG,EAAE;MAChCP,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACW,eAAe,GAAG,MAAM;MAC5Cb,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACgB,eAAe,GAAG,SAAS;MAC/ClB,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACiB,QAAQ,GAAG,EAAE;MACjCnB,QAAQ,CAACI,IAAI,CAACF,KAAK,CAACkB,MAAM,GAAG,EAAE;IACnC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO5B,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AAC1B,CAAC;AAACC,EAAA,CAvGIF,kBAAkB;AAAAgD,EAAA,GAAlBhD,kBAAkB;AAyGxB,eAAeA,kBAAkB;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}