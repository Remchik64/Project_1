{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\sait-znakomstv\\\\frontend\\\\src\\\\pages\\\\AdminGeoTestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getApiUrl } from '../config/api';\nimport './AdminGeoTestPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminGeoTestPage = () => {\n  _s();\n  const [selectedCity, setSelectedCity] = useState(() => {\n    // Инициализируем состояние из localStorage при загрузке\n    return localStorage.getItem('geoTestCity') || '';\n  });\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  // Загружаем текущий тестовый режим при монтировании компонента\n  useEffect(() => {\n    const savedCity = localStorage.getItem('geoTestCity');\n    if (savedCity && savedCity !== selectedCity) {\n      handleCityChange(savedCity);\n    }\n  }, []);\n\n  // Расширенный список тестовых IP-адресов для всех поддерживаемых городов\n  const testIPs = {\n    // Столицы\n    'Москва': '87.240.190.0',\n    'Санкт-Петербург': '31.134.191.0',\n    // Центральное Черноземье\n    'Воронеж': '46.226.227.0',\n    'Белгород': '31.31.196.0',\n    'Липецк': '46.42.16.0',\n    'Курск': '46.191.128.0',\n    'Тамбов': '77.50.254.0',\n    'Орёл': '95.179.0.0',\n    // Центральная Россия\n    'Брянск': '62.148.128.0',\n    'Калуга': '85.93.48.0',\n    'Тула': '83.149.8.0',\n    'Рязань': '62.148.128.0',\n    'Владимир': '94.25.192.0',\n    'Иваново': '37.112.0.0',\n    'Кострома': '93.175.0.0',\n    'Ярославль': '95.52.0.0',\n    // Поволжье\n    'Нижний Новгород': '94.180.128.0',\n    'Казань': '213.79.100.0',\n    'Самара': '185.37.128.0',\n    'Саратов': '85.249.0.0',\n    'Пенза': '94.181.128.0',\n    'Ульяновск': '79.164.0.0',\n    'Волгоград': '178.34.160.0',\n    'Астрахань': '217.149.176.0',\n    // Урал\n    'Екатеринбург': '92.242.32.0',\n    'Челябинск': '87.117.0.0',\n    'Уфа': '94.41.0.0',\n    'Пермь': '46.48.0.0',\n    // Юг России\n    'Ростов-на-Дону': '213.208.160.0',\n    'Краснодар': '217.23.80.0',\n    'Сочи': '188.168.0.0',\n    'Ставрополь': '83.219.128.0'\n  };\n\n  // Группировка городов по регионам для удобства выбора\n  const cityGroups = {\n    'Столицы': ['Москва', 'Санкт-Петербург'],\n    'Центральное Черноземье': ['Воронеж', 'Белгород', 'Липецк', 'Курск', 'Тамбов', 'Орёл'],\n    'Центральная Россия': ['Брянск', 'Калуга', 'Тула', 'Рязань', 'Владимир', 'Иваново', 'Кострома', 'Ярославль'],\n    'Поволжье': ['Нижний Новгород', 'Казань', 'Самара', 'Саратов', 'Пенза', 'Ульяновск', 'Волгоград', 'Астрахань'],\n    'Урал': ['Екатеринбург', 'Челябинск', 'Уфа', 'Пермь'],\n    'Юг России': ['Ростов-на-Дону', 'Краснодар', 'Сочи', 'Ставрополь']\n  };\n  const handleCityChange = async city => {\n    try {\n      setSelectedCity(city);\n      const ip = testIPs[city];\n      if (!ip) {\n        await disableTestMode();\n        return;\n      }\n      const response = await axios.post(getApiUrl('/api/test/geolocation'), {\n        ip\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n\n      // Проверяем успешность операции\n      if (response.data.city) {\n        // Сохраняем выбранный город в localStorage\n        localStorage.setItem('geoTestCity', city);\n        setMessage(`Тестовый режим активирован для города ${response.data.city} (${response.data.region})`);\n        setError('');\n      } else {\n        throw new Error('Не удалось получить данные о городе');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setSelectedCity('');\n      localStorage.removeItem('geoTestCity');\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Ошибка при изменении геолокации');\n      setMessage('');\n    }\n  };\n  const disableTestMode = async () => {\n    try {\n      const response = await axios.post(getApiUrl('/api/test/geolocation'), {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setSelectedCity('');\n      // Удаляем сохраненный город из localStorage\n      localStorage.removeItem('geoTestCity');\n      setMessage(response.data.message);\n      setError('');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Ошибка при отключении тестового режима');\n      setMessage('');\n    }\n  };\n\n  // Добавляем информацию о том, что тест активен\n  const getTestStatus = () => {\n    if (selectedCity) {\n      if (error) {\n        return `Ошибка: ${error}`;\n      }\n      return `Тестовый режим активен: ${selectedCity}`;\n    }\n    return 'Тестовый режим не активен';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-geo-test-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"geo-test-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-status\",\n        children: getTestStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 27\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geo-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434 \\u0434\\u043B\\u044F \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCity,\n          onChange: e => handleCityChange(e.target.value),\n          className: \"city-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u0420\\u0435\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F (\\u0442\\u0435\\u0441\\u0442 \\u0432\\u044B\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), Object.entries(cityGroups).map(([group, cities]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: group,\n            children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this))\n          }, group, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-test-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0440\\u0435\\u0436\\u0438\\u043C: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"IP \\u0430\\u0434\\u0440\\u0435\\u0441: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: testIPs[selectedCity]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"disable-test-button\",\n          onClick: disableTestMode,\n          children: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0440\\u0435\\u0436\\u0438\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041A\\u0430\\u043A \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0434\\u043B\\u044F \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u0441\\u0430\\u0439\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u0434\\u043B\\u044F \\u043F\\u0440\\u0438\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u0438\\u0442\\u0435\\u0441\\u044C \\u0441\\u044E\\u0434\\u0430 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u044F \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0433\\u043E \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"supported-regions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u0438\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u0440\\u0435\\u0433\\u0438\\u043E\\u043D\\u044B:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: Object.entries(cityGroups).map(([group, cities]) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [group, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), \" \", cities.join(', ')]\n            }, group, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminGeoTestPage, \"0YamuD5Fwd4D2EwJuIH/L9o/n8U=\");\n_c = AdminGeoTestPage;\nexport default AdminGeoTestPage;\nvar _c;\n$RefreshReg$(_c, \"AdminGeoTestPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","getApiUrl","jsxDEV","_jsxDEV","AdminGeoTestPage","_s","selectedCity","setSelectedCity","localStorage","getItem","message","setMessage","error","setError","savedCity","handleCityChange","testIPs","cityGroups","city","ip","disableTestMode","response","post","headers","data","setItem","region","Error","_error$response","_error$response$data","removeItem","_error$response2","_error$response2$data","getTestStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","entries","map","group","cities","label","onClick","join","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/sait-znakomstv/frontend/src/pages/AdminGeoTestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getApiUrl } from '../config/api';\r\nimport './AdminGeoTestPage.css';\r\n\r\nconst AdminGeoTestPage = () => {\r\n    const [selectedCity, setSelectedCity] = useState(() => {\r\n        // Инициализируем состояние из localStorage при загрузке\r\n        return localStorage.getItem('geoTestCity') || '';\r\n    });\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    // Загружаем текущий тестовый режим при монтировании компонента\r\n    useEffect(() => {\r\n        const savedCity = localStorage.getItem('geoTestCity');\r\n        if (savedCity && savedCity !== selectedCity) {\r\n            handleCityChange(savedCity);\r\n        }\r\n    }, []);\r\n\r\n    // Расширенный список тестовых IP-адресов для всех поддерживаемых городов\r\n    const testIPs = {\r\n        // Столицы\r\n        'Москва': '87.240.190.0',\r\n        'Санкт-Петербург': '31.134.191.0',\r\n        \r\n        // Центральное Черноземье\r\n        'Воронеж': '46.226.227.0',\r\n        'Белгород': '31.31.196.0',\r\n        'Липецк': '46.42.16.0',\r\n        'Курск': '46.191.128.0',\r\n        'Тамбов': '77.50.254.0',\r\n        'Орёл': '95.179.0.0',\r\n        \r\n        // Центральная Россия\r\n        'Брянск': '62.148.128.0',\r\n        'Калуга': '85.93.48.0',\r\n        'Тула': '83.149.8.0',\r\n        'Рязань': '62.148.128.0',\r\n        'Владимир': '94.25.192.0',\r\n        'Иваново': '37.112.0.0',\r\n        'Кострома': '93.175.0.0',\r\n        'Ярославль': '95.52.0.0',\r\n        \r\n        // Поволжье\r\n        'Нижний Новгород': '94.180.128.0',\r\n        'Казань': '213.79.100.0',\r\n        'Самара': '185.37.128.0',\r\n        'Саратов': '85.249.0.0',\r\n        'Пенза': '94.181.128.0',\r\n        'Ульяновск': '79.164.0.0',\r\n        'Волгоград': '178.34.160.0',\r\n        'Астрахань': '217.149.176.0',\r\n        \r\n        // Урал\r\n        'Екатеринбург': '92.242.32.0',\r\n        'Челябинск': '87.117.0.0',\r\n        'Уфа': '94.41.0.0',\r\n        'Пермь': '46.48.0.0',\r\n        \r\n        // Юг России\r\n        'Ростов-на-Дону': '213.208.160.0',\r\n        'Краснодар': '217.23.80.0',\r\n        'Сочи': '188.168.0.0',\r\n        'Ставрополь': '83.219.128.0'\r\n    };\r\n\r\n    // Группировка городов по регионам для удобства выбора\r\n    const cityGroups = {\r\n        'Столицы': ['Москва', 'Санкт-Петербург'],\r\n        'Центральное Черноземье': ['Воронеж', 'Белгород', 'Липецк', 'Курск', 'Тамбов', 'Орёл'],\r\n        'Центральная Россия': ['Брянск', 'Калуга', 'Тула', 'Рязань', 'Владимир', 'Иваново', 'Кострома', 'Ярославль'],\r\n        'Поволжье': ['Нижний Новгород', 'Казань', 'Самара', 'Саратов', 'Пенза', 'Ульяновск', 'Волгоград', 'Астрахань'],\r\n        'Урал': ['Екатеринбург', 'Челябинск', 'Уфа', 'Пермь'],\r\n        'Юг России': ['Ростов-на-Дону', 'Краснодар', 'Сочи', 'Ставрополь']\r\n    };\r\n\r\n    const handleCityChange = async (city) => {\r\n        try {\r\n            setSelectedCity(city);\r\n            const ip = testIPs[city];\r\n            \r\n            if (!ip) {\r\n                await disableTestMode();\r\n                return;\r\n            }\r\n\r\n            const response = await axios.post(\r\n                getApiUrl('/api/test/geolocation'),\r\n                { ip },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n            \r\n            // Проверяем успешность операции\r\n            if (response.data.city) {\r\n                // Сохраняем выбранный город в localStorage\r\n                localStorage.setItem('geoTestCity', city);\r\n                setMessage(`Тестовый режим активирован для города ${response.data.city} (${response.data.region})`);\r\n                setError('');\r\n            } else {\r\n                throw new Error('Не удалось получить данные о городе');\r\n            }\r\n        } catch (error) {\r\n            setSelectedCity('');\r\n            localStorage.removeItem('geoTestCity');\r\n            setError(error.response?.data?.message || error.message || 'Ошибка при изменении геолокации');\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    const disableTestMode = async () => {\r\n        try {\r\n            const response = await axios.post(\r\n                getApiUrl('/api/test/geolocation'),\r\n                {},\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n            \r\n            setSelectedCity('');\r\n            // Удаляем сохраненный город из localStorage\r\n            localStorage.removeItem('geoTestCity');\r\n            setMessage(response.data.message);\r\n            setError('');\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || 'Ошибка при отключении тестового режима');\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    // Добавляем информацию о том, что тест активен\r\n    const getTestStatus = () => {\r\n        if (selectedCity) {\r\n            if (error) {\r\n                return `Ошибка: ${error}`;\r\n            }\r\n            return `Тестовый режим активен: ${selectedCity}`;\r\n        }\r\n        return 'Тестовый режим не активен';\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-geo-test-page\">\r\n            <div className=\"geo-test-container\">\r\n                <h1>Тестирование геолокации</h1>\r\n                <div className=\"test-status\">\r\n                    {getTestStatus()}\r\n                </div>\r\n                \r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                {message && <div className=\"success-message\">{message}</div>}\r\n                \r\n                <div className=\"geo-controls\">\r\n                    <label>Выберите город для тестирования:</label>\r\n                    <select \r\n                        value={selectedCity} \r\n                        onChange={(e) => handleCityChange(e.target.value)}\r\n                        className=\"city-select\"\r\n                    >\r\n                        <option value=\"\">Реальная геолокация (тест выключен)</option>\r\n                        {Object.entries(cityGroups).map(([group, cities]) => (\r\n                            <optgroup key={group} label={group}>\r\n                                {cities.map(city => (\r\n                                    <option key={city} value={city}>\r\n                                        {city}\r\n                                    </option>\r\n                                ))}\r\n                            </optgroup>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {selectedCity && (\r\n                    <div className=\"current-test-info\">\r\n                        <p>Текущий тестовый режим: <strong>{selectedCity}</strong></p>\r\n                        <p>IP адрес: <code>{testIPs[selectedCity]}</code></p>\r\n                        <button \r\n                            className=\"disable-test-button\"\r\n                            onClick={disableTestMode}\r\n                        >\r\n                            Отключить тестовый режим\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"test-instructions\">\r\n                    <h3>Как использовать:</h3>\r\n                    <ol>\r\n                        <li>Выберите город из списка для тестирования геолокации</li>\r\n                        <li>Перейдите на главную страницу сайта</li>\r\n                        <li>Обновите страницу для применения изменений</li>\r\n                        <li>Вернитесь сюда для отключения тестового режима</li>\r\n                    </ol>\r\n                    <div className=\"supported-regions\">\r\n                        <h3>Поддерживаемые регионы:</h3>\r\n                        <ul>\r\n                            {Object.entries(cityGroups).map(([group, cities]) => (\r\n                                <li key={group}>\r\n                                    <strong>{group}:</strong> {cities.join(', ')}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminGeoTestPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}