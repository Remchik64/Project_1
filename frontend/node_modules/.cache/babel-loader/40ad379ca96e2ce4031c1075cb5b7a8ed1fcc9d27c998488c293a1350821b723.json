{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\sait-znakomstv\\\\frontend\\\\src\\\\pages\\\\AdminGeoTestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getApiUrl } from '../config/api';\nimport './AdminGeoTestPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminGeoTestPage = () => {\n  _s();\n  const [selectedCity, setSelectedCity] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [sessionId, setSessionId] = useState('');\n  useEffect(() => {\n    // Генерируем уникальный ID сессии\n    const generateSessionId = () => {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = Math.random() * 16 | 0;\n        const v = c === 'x' ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n      });\n    };\n    setSessionId(generateSessionId());\n  }, []);\n\n  // Группировка городов по регионам\n  const cityGroups = {\n    'Столицы': ['Москва', 'Санкт-Петербург'],\n    'Центральное Черноземье': ['Воронеж', 'Белгород', 'Липецк', 'Курск', 'Тамбов', 'Орёл'],\n    'Центральная Россия': ['Брянск', 'Калуга', 'Тула', 'Рязань', 'Владимир', 'Иваново', 'Кострома', 'Ярославль'],\n    'Поволжье': ['Нижний Новгород', 'Казань', 'Самара', 'Саратов', 'Пенза', 'Ульяновск', 'Волгоград', 'Астрахань'],\n    'Урал': ['Екатеринбург', 'Челябинск', 'Уфа', 'Пермь'],\n    'Юг России': ['Ростов-на-Дону', 'Краснодар', 'Сочи', 'Ставрополь']\n  };\n  const handleCityChange = async city => {\n    try {\n      setSelectedCity(city);\n      if (!city) {\n        await disableTestMode();\n        return;\n      }\n      const response = await axios.post(getApiUrl('/api/test/geolocation'), {\n        city,\n        sessionId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'X-Session-ID': sessionId\n        }\n      });\n      if (response.data.city) {\n        // Сохраняем только в памяти, не в localStorage\n        setMessage(`Тестовый режим активирован для города ${response.data.city}`);\n        setError('');\n      } else {\n        throw new Error('Не удалось получить данные о городе');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setSelectedCity('');\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Ошибка при изменении геолокации');\n      setMessage('');\n    }\n  };\n  const disableTestMode = async () => {\n    try {\n      const response = await axios.post(getApiUrl('/api/test/geolocation'), {\n        sessionId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'X-Session-ID': sessionId\n        }\n      });\n      setSelectedCity('');\n      setMessage(response.data.message);\n      setError('');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Ошибка при отключении тестового режима');\n      setMessage('');\n    }\n  };\n  const getTestStatus = () => {\n    if (selectedCity) {\n      if (error) {\n        return `Ошибка: ${error}`;\n      }\n      return `Тестовый режим активен: ${selectedCity}`;\n    }\n    return 'Тестовый режим не активен';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-geo-test-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"geo-test-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0422\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-status\",\n        children: getTestStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geo-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434 \\u0434\\u043B\\u044F \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCity,\n          onChange: e => handleCityChange(e.target.value),\n          className: \"city-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\u0420\\u0435\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F (\\u0442\\u0435\\u0441\\u0442 \\u0432\\u044B\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), Object.entries(cityGroups).map(([group, cities]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: group,\n            children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: city,\n              children: city\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this))\n          }, group, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-test-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0440\\u0435\\u0436\\u0438\\u043C: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"disable-test-button\",\n          onClick: disableTestMode,\n          children: \"\\u041E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u0440\\u0435\\u0436\\u0438\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-instructions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041A\\u0430\\u043A \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434 \\u0438\\u0437 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0430 \\u0434\\u043B\\u044F \\u0442\\u0435\\u0441\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u0441\\u0430\\u0439\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u0434\\u043B\\u044F \\u043F\\u0440\\u0438\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u044F \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u0412\\u0435\\u0440\\u043D\\u0438\\u0442\\u0435\\u0441\\u044C \\u0441\\u044E\\u0434\\u0430 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0438\\u044F \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0433\\u043E \\u0440\\u0435\\u0436\\u0438\\u043C\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminGeoTestPage, \"QF1NAbKUiI2np+aMjxjjCQt3fUQ=\");\n_c = AdminGeoTestPage;\nexport default AdminGeoTestPage;\nvar _c;\n$RefreshReg$(_c, \"AdminGeoTestPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","getApiUrl","jsxDEV","_jsxDEV","AdminGeoTestPage","_s","selectedCity","setSelectedCity","message","setMessage","error","setError","sessionId","setSessionId","generateSessionId","replace","c","r","Math","random","v","toString","cityGroups","handleCityChange","city","disableTestMode","response","post","headers","localStorage","getItem","data","Error","_error$response","_error$response$data","_error$response2","_error$response2$data","getTestStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","entries","map","group","cities","label","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/sait-znakomstv/frontend/src/pages/AdminGeoTestPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getApiUrl } from '../config/api';\r\nimport './AdminGeoTestPage.css';\r\n\r\nconst AdminGeoTestPage = () => {\r\n    const [selectedCity, setSelectedCity] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [sessionId, setSessionId] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Генерируем уникальный ID сессии\r\n        const generateSessionId = () => {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n                const r = Math.random() * 16 | 0;\r\n                const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        };\r\n        setSessionId(generateSessionId());\r\n    }, []);\r\n\r\n    // Группировка городов по регионам\r\n    const cityGroups = {\r\n        'Столицы': ['Москва', 'Санкт-Петербург'],\r\n        'Центральное Черноземье': ['Воронеж', 'Белгород', 'Липецк', 'Курск', 'Тамбов', 'Орёл'],\r\n        'Центральная Россия': ['Брянск', 'Калуга', 'Тула', 'Рязань', 'Владимир', 'Иваново', 'Кострома', 'Ярославль'],\r\n        'Поволжье': ['Нижний Новгород', 'Казань', 'Самара', 'Саратов', 'Пенза', 'Ульяновск', 'Волгоград', 'Астрахань'],\r\n        'Урал': ['Екатеринбург', 'Челябинск', 'Уфа', 'Пермь'],\r\n        'Юг России': ['Ростов-на-Дону', 'Краснодар', 'Сочи', 'Ставрополь']\r\n    };\r\n\r\n    const handleCityChange = async (city) => {\r\n        try {\r\n            setSelectedCity(city);\r\n            \r\n            if (!city) {\r\n                await disableTestMode();\r\n                return;\r\n            }\r\n\r\n            const response = await axios.post(\r\n                getApiUrl('/api/test/geolocation'),\r\n                { \r\n                    city,\r\n                    sessionId \r\n                },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                        'X-Session-ID': sessionId\r\n                    }\r\n                }\r\n            );\r\n            \r\n            if (response.data.city) {\r\n                // Сохраняем только в памяти, не в localStorage\r\n                setMessage(`Тестовый режим активирован для города ${response.data.city}`);\r\n                setError('');\r\n            } else {\r\n                throw new Error('Не удалось получить данные о городе');\r\n            }\r\n        } catch (error) {\r\n            setSelectedCity('');\r\n            setError(error.response?.data?.message || error.message || 'Ошибка при изменении геолокации');\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    const disableTestMode = async () => {\r\n        try {\r\n            const response = await axios.post(\r\n                getApiUrl('/api/test/geolocation'),\r\n                { sessionId },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                        'X-Session-ID': sessionId\r\n                    }\r\n                }\r\n            );\r\n            \r\n            setSelectedCity('');\r\n            setMessage(response.data.message);\r\n            setError('');\r\n        } catch (error) {\r\n            setError(error.response?.data?.message || 'Ошибка при отключении тестового режима');\r\n            setMessage('');\r\n        }\r\n    };\r\n\r\n    const getTestStatus = () => {\r\n        if (selectedCity) {\r\n            if (error) {\r\n                return `Ошибка: ${error}`;\r\n            }\r\n            return `Тестовый режим активен: ${selectedCity}`;\r\n        }\r\n        return 'Тестовый режим не активен';\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-geo-test-page\">\r\n            <div className=\"geo-test-container\">\r\n                <h1>Тестирование геолокации</h1>\r\n                <div className=\"test-status\">\r\n                    {getTestStatus()}\r\n                </div>\r\n                \r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                {message && <div className=\"success-message\">{message}</div>}\r\n                \r\n                <div className=\"geo-controls\">\r\n                    <label>Выберите город для тестирования:</label>\r\n                    <select \r\n                        value={selectedCity} \r\n                        onChange={(e) => handleCityChange(e.target.value)}\r\n                        className=\"city-select\"\r\n                    >\r\n                        <option value=\"\">Реальная геолокация (тест выключен)</option>\r\n                        {Object.entries(cityGroups).map(([group, cities]) => (\r\n                            <optgroup key={group} label={group}>\r\n                                {cities.map(city => (\r\n                                    <option key={city} value={city}>\r\n                                        {city}\r\n                                    </option>\r\n                                ))}\r\n                            </optgroup>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {selectedCity && (\r\n                    <div className=\"current-test-info\">\r\n                        <p>Текущий тестовый режим: <strong>{selectedCity}</strong></p>\r\n                        <button \r\n                            className=\"disable-test-button\"\r\n                            onClick={disableTestMode}\r\n                        >\r\n                            Отключить тестовый режим\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"test-instructions\">\r\n                    <h3>Как использовать:</h3>\r\n                    <ol>\r\n                        <li>Выберите город из списка для тестирования геолокации</li>\r\n                        <li>Перейдите на главную страницу сайта</li>\r\n                        <li>Обновите страницу для применения изменений</li>\r\n                        <li>Вернитесь сюда для отключения тестового режима</li>\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminGeoTestPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;MAC5B,OAAO,sCAAsC,CAACC,OAAO,CAAC,OAAO,EAAE,UAASC,CAAC,EAAE;QACvE,MAAMC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;QAChC,MAAMC,CAAC,GAAGJ,CAAC,KAAK,GAAG,GAAGC,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAG,GAAI;QACzC,OAAOG,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC;MACzB,CAAC,CAAC;IACN,CAAC;IACDR,YAAY,CAACC,iBAAiB,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,UAAU,GAAG;IACf,SAAS,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC;IACxC,wBAAwB,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;IACtF,oBAAoB,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC;IAC5G,UAAU,EAAE,CAAC,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC;IAC9G,MAAM,EAAE,CAAC,cAAc,EAAE,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC;IACrD,WAAW,EAAE,CAAC,gBAAgB,EAAE,WAAW,EAAE,MAAM,EAAE,YAAY;EACrE,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACrC,IAAI;MACAjB,eAAe,CAACiB,IAAI,CAAC;MAErB,IAAI,CAACA,IAAI,EAAE;QACP,MAAMC,eAAe,CAAC,CAAC;QACvB;MACJ;MAEA,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAC7B1B,SAAS,CAAC,uBAAuB,CAAC,EAClC;QACIuB,IAAI;QACJZ;MACJ,CAAC,EACD;QACIgB,OAAO,EAAE;UACL,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UAC1D,cAAc,EAAElB;QACpB;MACJ,CACJ,CAAC;MAED,IAAIc,QAAQ,CAACK,IAAI,CAACP,IAAI,EAAE;QACpB;QACAf,UAAU,CAAC,yCAAyCiB,QAAQ,CAACK,IAAI,CAACP,IAAI,EAAE,CAAC;QACzEb,QAAQ,CAAC,EAAE,CAAC;MAChB,CAAC,MAAM;QACH,MAAM,IAAIqB,KAAK,CAAC,qCAAqC,CAAC;MAC1D;IACJ,CAAC,CAAC,OAAOtB,KAAK,EAAE;MAAA,IAAAuB,eAAA,EAAAC,oBAAA;MACZ3B,eAAe,CAAC,EAAE,CAAC;MACnBI,QAAQ,CAAC,EAAAsB,eAAA,GAAAvB,KAAK,CAACgB,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsB1B,OAAO,KAAIE,KAAK,CAACF,OAAO,IAAI,iCAAiC,CAAC;MAC7FC,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,MAAMgB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAC7B1B,SAAS,CAAC,uBAAuB,CAAC,EAClC;QAAEW;MAAU,CAAC,EACb;QACIgB,OAAO,EAAE;UACL,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;UAC1D,cAAc,EAAElB;QACpB;MACJ,CACJ,CAAC;MAEDL,eAAe,CAAC,EAAE,CAAC;MACnBE,UAAU,CAACiB,QAAQ,CAACK,IAAI,CAACvB,OAAO,CAAC;MACjCG,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA,IAAAyB,gBAAA,EAAAC,qBAAA;MACZzB,QAAQ,CAAC,EAAAwB,gBAAA,GAAAzB,KAAK,CAACgB,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBJ,IAAI,cAAAK,qBAAA,uBAApBA,qBAAA,CAAsB5B,OAAO,KAAI,wCAAwC,CAAC;MACnFC,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,MAAM4B,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI/B,YAAY,EAAE;MACd,IAAII,KAAK,EAAE;QACP,OAAO,WAAWA,KAAK,EAAE;MAC7B;MACA,OAAO,2BAA2BJ,YAAY,EAAE;IACpD;IACA,OAAO,2BAA2B;EACtC,CAAC;EAED,oBACIH,OAAA;IAAKmC,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCpC,OAAA;MAAKmC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BpC,OAAA;QAAAoC,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCxC,OAAA;QAAKmC,SAAS,EAAC,aAAa;QAAAC,QAAA,EACvBF,aAAa,CAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EAELjC,KAAK,iBAAIP,OAAA;QAAKmC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE7B;MAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACrDnC,OAAO,iBAAIL,OAAA;QAAKmC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAE/B;MAAO;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAE5DxC,OAAA;QAAKmC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBpC,OAAA;UAAAoC,QAAA,EAAO;QAAgC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CxC,OAAA;UACIyC,KAAK,EAAEtC,YAAa;UACpBuC,QAAQ,EAAGC,CAAC,IAAKvB,gBAAgB,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAClDN,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAEvBpC,OAAA;YAAQyC,KAAK,EAAC,EAAE;YAAAL,QAAA,EAAC;UAAmC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC5DK,MAAM,CAACC,OAAO,CAAC3B,UAAU,CAAC,CAAC4B,GAAG,CAAC,CAAC,CAACC,KAAK,EAAEC,MAAM,CAAC,kBAC5CjD,OAAA;YAAsBkD,KAAK,EAAEF,KAAM;YAAAZ,QAAA,EAC9Ba,MAAM,CAACF,GAAG,CAAC1B,IAAI,iBACZrB,OAAA;cAAmByC,KAAK,EAAEpB,IAAK;cAAAe,QAAA,EAC1Bf;YAAI,GADIA,IAAI;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAET,CACX;UAAC,GALSQ,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMV,CACb,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAELrC,YAAY,iBACTH,OAAA;QAAKmC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BpC,OAAA;UAAAoC,QAAA,GAAG,8HAAwB,eAAApC,OAAA;YAAAoC,QAAA,EAASjC;UAAY;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9DxC,OAAA;UACImC,SAAS,EAAC,qBAAqB;UAC/BgB,OAAO,EAAE7B,eAAgB;UAAAc,QAAA,EAC5B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,eAEDxC,OAAA;QAAKmC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BpC,OAAA;UAAAoC,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BxC,OAAA;UAAAoC,QAAA,gBACIpC,OAAA;YAAAoC,QAAA,EAAI;UAAoD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7DxC,OAAA;YAAAoC,QAAA,EAAI;UAAmC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5CxC,OAAA;YAAAoC,QAAA,EAAI;UAA0C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnDxC,OAAA;YAAAoC,QAAA,EAAI;UAA8C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtC,EAAA,CAxJID,gBAAgB;AAAAmD,EAAA,GAAhBnD,gBAAgB;AA0JtB,eAAeA,gBAAgB;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}