{"ast":null,"code":"// Настройка axios по умолчанию\nimport axios from'axios';// Базовый URL для API\nexport const API_BASE_URL='http://localhost:3001';// Функция для формирования полного URL API\nexport const getApiUrl=path=>{return`${process.env.REACT_APP_API_URL||'http://localhost:5000'}${path}`;};// Функция для формирования полного URL для медиа-файлов\nexport const getMediaUrl=path=>path?`${process.env.REACT_APP_API_URL||'http://localhost:5000'}${path}`:null;// Добавляем перехватчик для добавления токена к запросам\naxios.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Добавляем перехватчик для обработки ошибок\naxios.interceptors.response.use(response=>response,error=>{if(error.response){// Если сервер вернул ошибку 401 (неавторизован), очищаем токен\nif(error.response.status===401){localStorage.removeItem('token');window.location.href='/';}console.error('Response data:',error.response.data);console.error('Response status:',error.response.status);}return Promise.reject(error);});","map":{"version":3,"names":["axios","API_BASE_URL","getApiUrl","path","process","env","REACT_APP_API_URL","getMediaUrl","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","removeItem","window","location","href","console","data"],"sources":["/home/renat/Project_1/frontend/src/config/api.js"],"sourcesContent":["// Настройка axios по умолчанию\nimport axios from 'axios';\n\n// Базовый URL для API\nexport const API_BASE_URL = 'http://localhost:3001';\n\n// Функция для формирования полного URL API\nexport const getApiUrl = (path) => {\n    return `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${path}`;\n};\n\n// Функция для формирования полного URL для медиа-файлов\nexport const getMediaUrl = (path) => \n    path ? `${process.env.REACT_APP_API_URL || 'http://localhost:5000'}${path}` : null;\n\n// Добавляем перехватчик для добавления токена к запросам\naxios.interceptors.request.use(\n    config => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\n// Добавляем перехватчик для обработки ошибок\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response) {\n            // Если сервер вернул ошибку 401 (неавторизован), очищаем токен\n            if (error.response.status === 401) {\n                localStorage.removeItem('token');\n                window.location.href = '/';\n            }\n            console.error('Response data:', error.response.data);\n            console.error('Response status:', error.response.status);\n        }\n        return Promise.reject(error);\n    }\n); "],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,MAAO,MAAM,CAAAC,YAAY,CAAG,uBAAuB,CAEnD;AACA,MAAO,MAAM,CAAAC,SAAS,CAAIC,IAAI,EAAK,CAC/B,MAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,GAAGH,IAAI,EAAE,CAC/E,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,WAAW,CAAIJ,IAAI,EAC5BA,IAAI,CAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,GAAGH,IAAI,EAAE,CAAG,IAAI,CAEtF;AACAH,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,EAAI,CACN,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACPD,MAAM,CAACI,OAAO,CAACC,aAAa,CAAG,UAAUJ,KAAK,EAAE,CACpD,CACA,MAAO,CAAAD,MAAM,CACjB,CAAC,CACDM,KAAK,EAAI,CACL,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAChC,CACJ,CAAC,CAED;AACAjB,KAAK,CAACQ,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC3BU,QAAQ,EAAIA,QAAQ,CACpBH,KAAK,EAAI,CACL,GAAIA,KAAK,CAACG,QAAQ,CAAE,CAChB;AACA,GAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,GAAK,GAAG,CAAE,CAC/BR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,GAAG,CAC9B,CACAC,OAAO,CAACT,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACG,QAAQ,CAACO,IAAI,CAAC,CACpDD,OAAO,CAACT,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC,CAC5D,CACA,MAAO,CAAAH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAChC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}