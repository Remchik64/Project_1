{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { getApiUrl, getMediaUrl } from '../config/api';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundProvider = ({\n  children\n}) => {\n  _s();\n  const [settings, setSettings] = useState(null);\n  const updateBackground = data => {\n    // Сброс всех стилей\n    document.body.style = '';\n    document.documentElement.style = '';\n    if (data.siteBackground === 'image' && data.siteBackgroundImage) {\n      const imageUrl = getMediaUrl(data.siteBackgroundImage);\n\n      // Создаем или получаем контейнер для фона\n      let bgContainer = document.getElementById('background-container');\n      if (!bgContainer) {\n        bgContainer = document.createElement('div');\n        bgContainer.id = 'background-container';\n        document.body.prepend(bgContainer);\n      }\n\n      // Стили для контейнера фона\n      bgContainer.style.position = 'fixed';\n      bgContainer.style.top = '0';\n      bgContainer.style.left = '0';\n      bgContainer.style.width = '100%';\n      bgContainer.style.height = '100vh';\n      bgContainer.style.zIndex = '-1';\n      bgContainer.style.overflow = 'hidden';\n\n      // Создаем или получаем изображение фона\n      let bgImage = bgContainer.querySelector('img');\n      if (!bgImage) {\n        bgImage = document.createElement('img');\n        bgContainer.appendChild(bgImage);\n      }\n\n      // Стили для изображения\n      bgImage.src = imageUrl;\n      bgImage.style.width = '100%';\n      bgImage.style.height = 'auto';\n      bgImage.style.maxWidth = '1920px';\n      bgImage.style.display = 'block';\n      bgImage.style.margin = '0 auto';\n      bgImage.style.objectFit = 'contain';\n      bgImage.style.objectPosition = 'top center';\n\n      // Стили для body\n      document.body.style.margin = '0';\n      document.body.style.padding = '0';\n      document.body.style.minHeight = '100vh';\n      document.body.style.backgroundColor = '#f5f5f5';\n\n      // Обработчик для корректного масштабирования изображения\n      const handleResize = () => {\n        const windowRatio = window.innerWidth / window.innerHeight;\n        const imageRatio = bgImage.naturalWidth / bgImage.naturalHeight;\n        if (windowRatio > imageRatio) {\n          bgImage.style.width = 'auto';\n          bgImage.style.height = '100vh';\n        } else {\n          bgImage.style.width = '100%';\n          bgImage.style.height = 'auto';\n        }\n      };\n\n      // Добавляем обработчик изменения размера окна\n      window.addEventListener('resize', handleResize);\n      bgImage.onload = handleResize;\n    } else {\n      // Удаляем контейнер фона если он существует\n      const bgContainer = document.getElementById('background-container');\n      if (bgContainer) {\n        bgContainer.remove();\n      }\n\n      // Применяем цветовой фон\n      document.body.style.backgroundColor = data.siteBackgroundColor || '#f5f5f5';\n    }\n  };\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await axios.get(getApiUrl('/api/site-settings'));\n        setSettings(response.data);\n        updateBackground(response.data);\n      } catch (error) {\n        console.error('Ошибка при загрузке настроек фона:', error);\n        document.body.style.backgroundColor = '#f5f5f5';\n      }\n    };\n    fetchSettings();\n    window.addEventListener('settingsUpdated', fetchSettings);\n    return () => {\n      window.removeEventListener('settingsUpdated', fetchSettings);\n      const bgContainer = document.getElementById('background-container');\n      if (bgContainer) {\n        bgContainer.remove();\n      }\n      document.body.style = '';\n      document.documentElement.style = '';\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(BackgroundProvider, \"mCc1AI3nlnFR6PXJot/5Z7AXrOM=\");\n_c = BackgroundProvider;\nexport default BackgroundProvider;\nvar _c;\n$RefreshReg$(_c, \"BackgroundProvider\");","map":{"version":3,"names":["React","useEffect","useState","axios","getApiUrl","getMediaUrl","Fragment","_Fragment","jsxDEV","_jsxDEV","BackgroundProvider","children","_s","settings","setSettings","updateBackground","data","document","body","style","documentElement","siteBackground","siteBackgroundImage","imageUrl","bgContainer","getElementById","createElement","id","prepend","position","top","left","width","height","zIndex","overflow","bgImage","querySelector","appendChild","src","maxWidth","display","margin","objectFit","objectPosition","padding","minHeight","backgroundColor","handleResize","windowRatio","window","innerWidth","innerHeight","imageRatio","naturalWidth","naturalHeight","addEventListener","onload","remove","siteBackgroundColor","fetchSettings","response","get","error","console","removeEventListener","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Sait-znakomstv2/frontend/src/components/BackgroundProvider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { getApiUrl, getMediaUrl } from '../config/api';\r\n\r\nconst BackgroundProvider = ({ children }) => {\r\n    const [settings, setSettings] = useState(null);\r\n\r\n    const updateBackground = (data) => {\r\n        // Сброс всех стилей\r\n        document.body.style = '';\r\n        document.documentElement.style = '';\r\n        \r\n        if (data.siteBackground === 'image' && data.siteBackgroundImage) {\r\n            const imageUrl = getMediaUrl(data.siteBackgroundImage);\r\n            \r\n            // Создаем или получаем контейнер для фона\r\n            let bgContainer = document.getElementById('background-container');\r\n            if (!bgContainer) {\r\n                bgContainer = document.createElement('div');\r\n                bgContainer.id = 'background-container';\r\n                document.body.prepend(bgContainer);\r\n            }\r\n            \r\n            // Стили для контейнера фона\r\n            bgContainer.style.position = 'fixed';\r\n            bgContainer.style.top = '0';\r\n            bgContainer.style.left = '0';\r\n            bgContainer.style.width = '100%';\r\n            bgContainer.style.height = '100vh';\r\n            bgContainer.style.zIndex = '-1';\r\n            bgContainer.style.overflow = 'hidden';\r\n            \r\n            // Создаем или получаем изображение фона\r\n            let bgImage = bgContainer.querySelector('img');\r\n            if (!bgImage) {\r\n                bgImage = document.createElement('img');\r\n                bgContainer.appendChild(bgImage);\r\n            }\r\n            \r\n            // Стили для изображения\r\n            bgImage.src = imageUrl;\r\n            bgImage.style.width = '100%';\r\n            bgImage.style.height = 'auto';\r\n            bgImage.style.maxWidth = '1920px';\r\n            bgImage.style.display = 'block';\r\n            bgImage.style.margin = '0 auto';\r\n            bgImage.style.objectFit = 'contain';\r\n            bgImage.style.objectPosition = 'top center';\r\n            \r\n            // Стили для body\r\n            document.body.style.margin = '0';\r\n            document.body.style.padding = '0';\r\n            document.body.style.minHeight = '100vh';\r\n            document.body.style.backgroundColor = '#f5f5f5';\r\n            \r\n            // Обработчик для корректного масштабирования изображения\r\n            const handleResize = () => {\r\n                const windowRatio = window.innerWidth / window.innerHeight;\r\n                const imageRatio = bgImage.naturalWidth / bgImage.naturalHeight;\r\n                \r\n                if (windowRatio > imageRatio) {\r\n                    bgImage.style.width = 'auto';\r\n                    bgImage.style.height = '100vh';\r\n                } else {\r\n                    bgImage.style.width = '100%';\r\n                    bgImage.style.height = 'auto';\r\n                }\r\n            };\r\n            \r\n            // Добавляем обработчик изменения размера окна\r\n            window.addEventListener('resize', handleResize);\r\n            bgImage.onload = handleResize;\r\n            \r\n        } else {\r\n            // Удаляем контейнер фона если он существует\r\n            const bgContainer = document.getElementById('background-container');\r\n            if (bgContainer) {\r\n                bgContainer.remove();\r\n            }\r\n            \r\n            // Применяем цветовой фон\r\n            document.body.style.backgroundColor = data.siteBackgroundColor || '#f5f5f5';\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchSettings = async () => {\r\n            try {\r\n                const response = await axios.get(getApiUrl('/api/site-settings'));\r\n                setSettings(response.data);\r\n                updateBackground(response.data);\r\n            } catch (error) {\r\n                console.error('Ошибка при загрузке настроек фона:', error);\r\n                document.body.style.backgroundColor = '#f5f5f5';\r\n            }\r\n        };\r\n\r\n        fetchSettings();\r\n        window.addEventListener('settingsUpdated', fetchSettings);\r\n\r\n        return () => {\r\n            window.removeEventListener('settingsUpdated', fetchSettings);\r\n            const bgContainer = document.getElementById('background-container');\r\n            if (bgContainer) {\r\n                bgContainer.remove();\r\n            }\r\n            document.body.style = '';\r\n            document.documentElement.style = '';\r\n        };\r\n    }, []);\r\n\r\n    return <>{children}</>;\r\n};\r\n\r\nexport default BackgroundProvider; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}