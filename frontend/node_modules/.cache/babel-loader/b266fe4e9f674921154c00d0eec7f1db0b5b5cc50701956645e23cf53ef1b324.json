{"ast":null,"code":"// Настройка axios по умолчанию\nimport axios from 'axios';\n\n// Базовый URL API\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Создаем экземпляр axios с базовой конфигурацией\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\n\n// Функция для формирования полного URL API\nexport const getApiUrl = endpoint => {\n  return `${API_URL}${endpoint}`;\n};\n\n// Функция для формирования URL медиа-файла\nexport const getMediaUrl = relativePath => {\n  if (!relativePath) return '';\n  // Убираем начальный слэш, если он есть\n  const cleanPath = relativePath.startsWith('/') ? relativePath.slice(1) : relativePath;\n  return `${API_URL}/${cleanPath}`;\n};\n\n// Перехватчик для обработки ответов\napi.interceptors.response.use(response => response, error => {\n  // Если ответ 401 (Unauthorized), перенаправляем на страницу входа\n  if (error.response && error.response.status === 401) {\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","withCredentials","getApiUrl","endpoint","getMediaUrl","relativePath","cleanPath","startsWith","slice","interceptors","response","use","error","status","window","location","href","Promise","reject"],"sources":["C:/Users/user/Desktop/Sait-znakomstv2/frontend/src/config/api.js"],"sourcesContent":["// Настройка axios по умолчанию\r\nimport axios from 'axios';\r\n\r\n// Базовый URL API\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n// Создаем экземпляр axios с базовой конфигурацией\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    withCredentials: true\r\n});\r\n\r\n// Функция для формирования полного URL API\r\nexport const getApiUrl = (endpoint) => {\r\n    return `${API_URL}${endpoint}`;\r\n};\r\n\r\n// Функция для формирования URL медиа-файла\r\nexport const getMediaUrl = (relativePath) => {\r\n    if (!relativePath) return '';\r\n    // Убираем начальный слэш, если он есть\r\n    const cleanPath = relativePath.startsWith('/') ? relativePath.slice(1) : relativePath;\r\n    return `${API_URL}/${cleanPath}`;\r\n};\r\n\r\n// Перехватчик для обработки ответов\r\napi.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n        // Если ответ 401 (Unauthorized), перенаправляем на страницу входа\r\n        if (error.response && error.response.status === 401) {\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api; "],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAExE;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACrBC,OAAO,EAAEN,OAAO;EAChBO,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAIC,QAAQ,IAAK;EACnC,OAAO,GAAGT,OAAO,GAAGS,QAAQ,EAAE;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAIC,YAAY,IAAK;EACzC,IAAI,CAACA,YAAY,EAAE,OAAO,EAAE;EAC5B;EACA,MAAMC,SAAS,GAAGD,YAAY,CAACE,UAAU,CAAC,GAAG,CAAC,GAAGF,YAAY,CAACG,KAAK,CAAC,CAAC,CAAC,GAAGH,YAAY;EACrF,OAAO,GAAGX,OAAO,IAAIY,SAAS,EAAE;AACpC,CAAC;;AAED;AACAR,GAAG,CAACW,YAAY,CAACC,QAAQ,CAACC,GAAG,CACxBD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACP;EACA,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;IACjDC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}